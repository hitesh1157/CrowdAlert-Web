stages:
  - setup_py_env
  - install_py_deps
  - test_backend
  - install_npm_deps
  - test_frontend
  - build_image

cache:
  paths:
  - node_modules/
  - env/

setup_py_env:
  image: python:3.5
  stage: setup_py_env
  script:
  - apt-get update -q -y
  - apt-get install -y python-pip
  - pip install virtualenv
  - virtualenv env --python=python3.5
  artifacts:
    paths:
    - env/

install_py_deps:
  image: python:3.5
  dependencies:
  - setup_py_env
  stage: install_py_deps
  script:
  - . env/bin/activate
  - pip install -r requirements.txt
  artifacts:
    paths:
    - env/

test_backend:
  image: python:3.5
  dependencies:
  - install_py_deps
  stage: test_backend
  script:
  - . env/bin/activate
  - coverage run manage.py test api.users -v 2
  artifacts:
    paths:
    - env/

install_npm_deps:
  image: node:10.15.0
  stage: install_npm_deps
  script:
  - yarn
  artifacts:
    paths:
    - node_modules/

test_frontend:
  image: node:10.15.0
  stage: test_frontend
  dependencies:
  - install_npm_deps
  script:
  - yarn lint
  - yarn test
  when: on_success

build_image:
  image: docker
  stage: build_image
  dependencies:
  - install_npm_deps
  - test_frontend
  - test_backend
  script:
  - docker build -t crowdalert .
  when: on_success
